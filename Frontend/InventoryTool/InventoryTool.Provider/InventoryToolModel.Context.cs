//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventoryTool.Provider
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using Model;

    public partial class InventoryToolDBEntities : DbContext
    {
        public InventoryToolDBEntities()
            : base("name=InventoryToolDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<M_Part> M_Part { get; set; }
        public virtual DbSet<M_Product> M_Product { get; set; }
        public virtual DbSet<M_Customer> M_Customer { get; set; }
        public virtual DbSet<M_Supplier> M_Supplier { get; set; }
        public virtual DbSet<vw_MinimumBalance> vw_MinimumBalance { get; set; }
        public virtual DbSet<TX_Part_Stock> TX_Part_Stock { get; set; }
    
        public virtual int DeleteProduct(Nullable<int> product_Id, string lastModifiedBy, ObjectParameter return_Status)
        {
            var product_IdParameter = product_Id.HasValue ?
                new ObjectParameter("Product_Id", product_Id) :
                new ObjectParameter("Product_Id", typeof(int));
    
            var lastModifiedByParameter = lastModifiedBy != null ?
                new ObjectParameter("LastModifiedBy", lastModifiedBy) :
                new ObjectParameter("LastModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProduct", product_IdParameter, lastModifiedByParameter, return_Status);
        }
    
        public virtual ObjectResult<GetAllProduct_Result> GetAllProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllProduct_Result>("GetAllProduct");
        }
    
        public virtual int InsertErrorLog(Nullable<int> window_Id, string source, string source_Detail, string error_description)
        {
            var window_IdParameter = window_Id.HasValue ?
                new ObjectParameter("Window_Id", window_Id) :
                new ObjectParameter("Window_Id", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var source_DetailParameter = source_Detail != null ?
                new ObjectParameter("Source_Detail", source_Detail) :
                new ObjectParameter("Source_Detail", typeof(string));
    
            var error_descriptionParameter = error_description != null ?
                new ObjectParameter("Error_description", error_description) :
                new ObjectParameter("Error_description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertErrorLog", window_IdParameter, sourceParameter, source_DetailParameter, error_descriptionParameter);
        }
    
        public virtual int UpdateProduct(Nullable<int> product_Id, string product_Code, string product_Name, Nullable<int> manufacturing_Days, string description, string modifiedBy, ObjectParameter return_Status)
        {
            var product_IdParameter = product_Id.HasValue ?
                new ObjectParameter("Product_Id", product_Id) :
                new ObjectParameter("Product_Id", typeof(int));
    
            var product_CodeParameter = product_Code != null ?
                new ObjectParameter("Product_Code", product_Code) :
                new ObjectParameter("Product_Code", typeof(string));
    
            var product_NameParameter = product_Name != null ?
                new ObjectParameter("Product_Name", product_Name) :
                new ObjectParameter("Product_Name", typeof(string));
    
            var manufacturing_DaysParameter = manufacturing_Days.HasValue ?
                new ObjectParameter("Manufacturing_Days", manufacturing_Days) :
                new ObjectParameter("Manufacturing_Days", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProduct", product_IdParameter, product_CodeParameter, product_NameParameter, manufacturing_DaysParameter, descriptionParameter, modifiedByParameter, return_Status);
        }
    
        public virtual int DeletePart(Nullable<int> part_Id, string lastModifiedBy, ObjectParameter return_Status)
        {
            var part_IdParameter = part_Id.HasValue ?
                new ObjectParameter("Part_Id", part_Id) :
                new ObjectParameter("Part_Id", typeof(int));
    
            var lastModifiedByParameter = lastModifiedBy != null ?
                new ObjectParameter("LastModifiedBy", lastModifiedBy) :
                new ObjectParameter("LastModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePart", part_IdParameter, lastModifiedByParameter, return_Status);
        }
    
        public virtual ObjectResult<GetAllPart_Result> GetAllPart()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPart_Result>("GetAllPart");
        }
    
        public virtual int UpdatePart(Nullable<int> part_Id, Nullable<int> part_Type_Id, Nullable<int> outsource_Type_Id, string part_Code, string part_Name, Nullable<int> unit_Id, Nullable<int> category_Id, Nullable<int> color_Id, Nullable<int> material_Id, Nullable<int> criticality_Id, Nullable<int> min_Quantity, string modifiedBy, ObjectParameter return_Status)
        {
            var part_IdParameter = part_Id.HasValue ?
                new ObjectParameter("Part_Id", part_Id) :
                new ObjectParameter("Part_Id", typeof(int));
    
            var part_Type_IdParameter = part_Type_Id.HasValue ?
                new ObjectParameter("Part_Type_Id", part_Type_Id) :
                new ObjectParameter("Part_Type_Id", typeof(int));
    
            var outsource_Type_IdParameter = outsource_Type_Id.HasValue ?
                new ObjectParameter("Outsource_Type_Id", outsource_Type_Id) :
                new ObjectParameter("Outsource_Type_Id", typeof(int));
    
            var part_CodeParameter = part_Code != null ?
                new ObjectParameter("Part_Code", part_Code) :
                new ObjectParameter("Part_Code", typeof(string));
    
            var part_NameParameter = part_Name != null ?
                new ObjectParameter("Part_Name", part_Name) :
                new ObjectParameter("Part_Name", typeof(string));
    
            var unit_IdParameter = unit_Id.HasValue ?
                new ObjectParameter("Unit_Id", unit_Id) :
                new ObjectParameter("Unit_Id", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var color_IdParameter = color_Id.HasValue ?
                new ObjectParameter("Color_Id", color_Id) :
                new ObjectParameter("Color_Id", typeof(int));
    
            var material_IdParameter = material_Id.HasValue ?
                new ObjectParameter("Material_Id", material_Id) :
                new ObjectParameter("Material_Id", typeof(int));
    
            var criticality_IdParameter = criticality_Id.HasValue ?
                new ObjectParameter("Criticality_Id", criticality_Id) :
                new ObjectParameter("Criticality_Id", typeof(int));
    
            var min_QuantityParameter = min_Quantity.HasValue ?
                new ObjectParameter("Min_Quantity", min_Quantity) :
                new ObjectParameter("Min_Quantity", typeof(int));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePart", part_IdParameter, part_Type_IdParameter, outsource_Type_IdParameter, part_CodeParameter, part_NameParameter, unit_IdParameter, category_IdParameter, color_IdParameter, material_IdParameter, criticality_IdParameter, min_QuantityParameter, modifiedByParameter, return_Status);
        }
    
        public virtual ObjectResult<GetAllCategory_Result> GetAllCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCategory_Result>("GetAllCategory");
        }
    
        public virtual ObjectResult<GetAllColor_Result> GetAllColor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllColor_Result>("GetAllColor");
        }
    
        public virtual ObjectResult<GetAllMaterial_Result> GetAllMaterial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllMaterial_Result>("GetAllMaterial");
        }
    
        public virtual ObjectResult<GetAllOutsourceType_Result> GetAllOutsourceType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllOutsourceType_Result>("GetAllOutsourceType");
        }
    
        public virtual ObjectResult<GetAllPartType_Result> GetAllPartType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPartType_Result>("GetAllPartType");
        }
    
        public virtual ObjectResult<GetAllUnit_Result> GetAllUnit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllUnit_Result>("GetAllUnit");
        }
    
        public virtual ObjectResult<GetAllCriticality_Result> GetAllCriticality()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCriticality_Result>("GetAllCriticality");
        }
    
        public virtual ObjectResult<GetAllStore_Result> GetAllStore()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllStore_Result>("GetAllStore");
        }
    
        public virtual int UpdatePartStock(Nullable<int> fromStore_Id, Nullable<int> toStore_Id, Nullable<System.DateTime> date, Nullable<int> storeTransferType_Id, string description, string modifiedBy, ObjectParameter return_Status)
        {
            var fromStore_IdParameter = fromStore_Id.HasValue ?
                new ObjectParameter("FromStore_Id", fromStore_Id) :
                new ObjectParameter("FromStore_Id", typeof(int));
    
            var toStore_IdParameter = toStore_Id.HasValue ?
                new ObjectParameter("ToStore_Id", toStore_Id) :
                new ObjectParameter("ToStore_Id", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var storeTransferType_IdParameter = storeTransferType_Id.HasValue ?
                new ObjectParameter("StoreTransferType_Id", storeTransferType_Id) :
                new ObjectParameter("StoreTransferType_Id", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePartStock", fromStore_IdParameter, toStore_IdParameter, dateParameter, storeTransferType_IdParameter, descriptionParameter, modifiedByParameter, return_Status);
        }
    
        public virtual ObjectResult<GetPartByFilter_Result> GetPartByFilter(Nullable<int> part_Type_Id, Nullable<int> outsource_Type_Id, string part_Code, string part_Name, Nullable<int> unit_Id, Nullable<int> category_Id, Nullable<int> color_Id, Nullable<int> material_Id, Nullable<int> criticality_Id)
        {
            var part_Type_IdParameter = part_Type_Id.HasValue ?
                new ObjectParameter("Part_Type_Id", part_Type_Id) :
                new ObjectParameter("Part_Type_Id", typeof(int));
    
            var outsource_Type_IdParameter = outsource_Type_Id.HasValue ?
                new ObjectParameter("Outsource_Type_Id", outsource_Type_Id) :
                new ObjectParameter("Outsource_Type_Id", typeof(int));
    
            var part_CodeParameter = part_Code != null ?
                new ObjectParameter("Part_Code", part_Code) :
                new ObjectParameter("Part_Code", typeof(string));
    
            var part_NameParameter = part_Name != null ?
                new ObjectParameter("Part_Name", part_Name) :
                new ObjectParameter("Part_Name", typeof(string));
    
            var unit_IdParameter = unit_Id.HasValue ?
                new ObjectParameter("Unit_Id", unit_Id) :
                new ObjectParameter("Unit_Id", typeof(int));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var color_IdParameter = color_Id.HasValue ?
                new ObjectParameter("Color_Id", color_Id) :
                new ObjectParameter("Color_Id", typeof(int));
    
            var material_IdParameter = material_Id.HasValue ?
                new ObjectParameter("Material_Id", material_Id) :
                new ObjectParameter("Material_Id", typeof(int));
    
            var criticality_IdParameter = criticality_Id.HasValue ?
                new ObjectParameter("Criticality_Id", criticality_Id) :
                new ObjectParameter("Criticality_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPartByFilter_Result>("GetPartByFilter", part_Type_IdParameter, outsource_Type_IdParameter, part_CodeParameter, part_NameParameter, unit_IdParameter, category_IdParameter, color_IdParameter, material_IdParameter, criticality_IdParameter);
        }
    
        public virtual int DeleteCustomer(Nullable<int> customer_Id, string lastModifiedBy, ObjectParameter return_Status)
        {
            var customer_IdParameter = customer_Id.HasValue ?
                new ObjectParameter("Customer_Id", customer_Id) :
                new ObjectParameter("Customer_Id", typeof(int));
    
            var lastModifiedByParameter = lastModifiedBy != null ?
                new ObjectParameter("LastModifiedBy", lastModifiedBy) :
                new ObjectParameter("LastModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCustomer", customer_IdParameter, lastModifiedByParameter, return_Status);
        }
    
        public virtual int UpdateCustomer(Nullable<int> customer_Id, string customer_Code, string customer_Name, string contact_No, string email, string address1, string address2, string city, string state, string pinCode, string tinNo, string vatNo, string note, string modifiedBy, ObjectParameter return_Status)
        {
            var customer_IdParameter = customer_Id.HasValue ?
                new ObjectParameter("Customer_Id", customer_Id) :
                new ObjectParameter("Customer_Id", typeof(int));
    
            var customer_CodeParameter = customer_Code != null ?
                new ObjectParameter("Customer_Code", customer_Code) :
                new ObjectParameter("Customer_Code", typeof(string));
    
            var customer_NameParameter = customer_Name != null ?
                new ObjectParameter("Customer_Name", customer_Name) :
                new ObjectParameter("Customer_Name", typeof(string));
    
            var contact_NoParameter = contact_No != null ?
                new ObjectParameter("Contact_No", contact_No) :
                new ObjectParameter("Contact_No", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var pinCodeParameter = pinCode != null ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(string));
    
            var tinNoParameter = tinNo != null ?
                new ObjectParameter("TinNo", tinNo) :
                new ObjectParameter("TinNo", typeof(string));
    
            var vatNoParameter = vatNo != null ?
                new ObjectParameter("VatNo", vatNo) :
                new ObjectParameter("VatNo", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomer", customer_IdParameter, customer_CodeParameter, customer_NameParameter, contact_NoParameter, emailParameter, address1Parameter, address2Parameter, cityParameter, stateParameter, pinCodeParameter, tinNoParameter, vatNoParameter, noteParameter, modifiedByParameter, return_Status);
        }
    
        public virtual int DeleteSupplier(Nullable<int> supplier_Id, string lastModifiedBy, ObjectParameter return_Status)
        {
            var supplier_IdParameter = supplier_Id.HasValue ?
                new ObjectParameter("Supplier_Id", supplier_Id) :
                new ObjectParameter("Supplier_Id", typeof(int));
    
            var lastModifiedByParameter = lastModifiedBy != null ?
                new ObjectParameter("LastModifiedBy", lastModifiedBy) :
                new ObjectParameter("LastModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSupplier", supplier_IdParameter, lastModifiedByParameter, return_Status);
        }
    
        public virtual ObjectResult<GetAllSupplier_Result> GetAllSupplier()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSupplier_Result>("GetAllSupplier");
        }
    
        public virtual int UpdateSupplier(Nullable<int> supplier_Id, string supplier_Code, string supplier_Name, string contact_No, string email, string address1, string address2, string city, string state, string pinCode, string tinNo, string vatNo, string note, string modifiedBy, ObjectParameter return_Status)
        {
            var supplier_IdParameter = supplier_Id.HasValue ?
                new ObjectParameter("Supplier_Id", supplier_Id) :
                new ObjectParameter("Supplier_Id", typeof(int));
    
            var supplier_CodeParameter = supplier_Code != null ?
                new ObjectParameter("Supplier_Code", supplier_Code) :
                new ObjectParameter("Supplier_Code", typeof(string));
    
            var supplier_NameParameter = supplier_Name != null ?
                new ObjectParameter("Supplier_Name", supplier_Name) :
                new ObjectParameter("Supplier_Name", typeof(string));
    
            var contact_NoParameter = contact_No != null ?
                new ObjectParameter("Contact_No", contact_No) :
                new ObjectParameter("Contact_No", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var pinCodeParameter = pinCode != null ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(string));
    
            var tinNoParameter = tinNo != null ?
                new ObjectParameter("TinNo", tinNo) :
                new ObjectParameter("TinNo", typeof(string));
    
            var vatNoParameter = vatNo != null ?
                new ObjectParameter("VatNo", vatNo) :
                new ObjectParameter("VatNo", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("Note", note) :
                new ObjectParameter("Note", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSupplier", supplier_IdParameter, supplier_CodeParameter, supplier_NameParameter, contact_NoParameter, emailParameter, address1Parameter, address2Parameter, cityParameter, stateParameter, pinCodeParameter, tinNoParameter, vatNoParameter, noteParameter, modifiedByParameter, return_Status);
        }
    
        public virtual ObjectResult<GetAllCustomer_Result> GetAllCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCustomer_Result>("GetAllCustomer");
        }
    
        public virtual ObjectResult<GetStockPartDetailReport_Result> GetStockPartDetailReport(Nullable<int> part_Id)
        {
            var part_IdParameter = part_Id.HasValue ?
                new ObjectParameter("Part_Id", part_Id) :
                new ObjectParameter("Part_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStockPartDetailReport_Result>("GetStockPartDetailReport", part_IdParameter);
        }
    }
}
