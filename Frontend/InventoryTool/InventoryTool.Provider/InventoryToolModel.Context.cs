//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InventoryTool.Provider
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using Model;

    public partial class InventoryToolDBEntities : DbContext
    {
        public InventoryToolDBEntities()
            : base("name=InventoryToolDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<M_Part> M_Part { get; set; }
        public virtual DbSet<M_Product> M_Product { get; set; }
    
        public virtual int DeleteProduct(Nullable<int> product_Id, string lastModifiedBy, ObjectParameter return_Status)
        {
            var product_IdParameter = product_Id.HasValue ?
                new ObjectParameter("Product_Id", product_Id) :
                new ObjectParameter("Product_Id", typeof(int));
    
            var lastModifiedByParameter = lastModifiedBy != null ?
                new ObjectParameter("LastModifiedBy", lastModifiedBy) :
                new ObjectParameter("LastModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProduct", product_IdParameter, lastModifiedByParameter, return_Status);
        }
    
        public virtual ObjectResult<GetAllProduct_Result> GetAllProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllProduct_Result>("GetAllProduct");
        }
    
        public virtual int InsertErrorLog(Nullable<int> window_Id, string source, string source_Detail, string error_description)
        {
            var window_IdParameter = window_Id.HasValue ?
                new ObjectParameter("Window_Id", window_Id) :
                new ObjectParameter("Window_Id", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var source_DetailParameter = source_Detail != null ?
                new ObjectParameter("Source_Detail", source_Detail) :
                new ObjectParameter("Source_Detail", typeof(string));
    
            var error_descriptionParameter = error_description != null ?
                new ObjectParameter("Error_description", error_description) :
                new ObjectParameter("Error_description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertErrorLog", window_IdParameter, sourceParameter, source_DetailParameter, error_descriptionParameter);
        }
    
        public virtual int UpdateProduct(Nullable<int> product_Id, string product_Code, string product_Name, Nullable<int> manufacturing_Days, string description, string modifiedBy, ObjectParameter return_Status)
        {
            var product_IdParameter = product_Id.HasValue ?
                new ObjectParameter("Product_Id", product_Id) :
                new ObjectParameter("Product_Id", typeof(int));
    
            var product_CodeParameter = product_Code != null ?
                new ObjectParameter("Product_Code", product_Code) :
                new ObjectParameter("Product_Code", typeof(string));
    
            var product_NameParameter = product_Name != null ?
                new ObjectParameter("Product_Name", product_Name) :
                new ObjectParameter("Product_Name", typeof(string));
    
            var manufacturing_DaysParameter = manufacturing_Days.HasValue ?
                new ObjectParameter("Manufacturing_Days", manufacturing_Days) :
                new ObjectParameter("Manufacturing_Days", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProduct", product_IdParameter, product_CodeParameter, product_NameParameter, manufacturing_DaysParameter, descriptionParameter, modifiedByParameter, return_Status);
        }
    
        public virtual int DeletePart(Nullable<int> part_Id, string lastModifiedBy, ObjectParameter return_Status)
        {
            var part_IdParameter = part_Id.HasValue ?
                new ObjectParameter("Part_Id", part_Id) :
                new ObjectParameter("Part_Id", typeof(int));
    
            var lastModifiedByParameter = lastModifiedBy != null ?
                new ObjectParameter("LastModifiedBy", lastModifiedBy) :
                new ObjectParameter("LastModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePart", part_IdParameter, lastModifiedByParameter, return_Status);
        }
    
        public virtual ObjectResult<GetAllPart_Result> GetAllPart()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPart_Result>("GetAllPart");
        }
    
        public virtual int UpdatePart(Nullable<int> part_Id, Nullable<int> part_Type_Id, Nullable<int> outsource_Type_Id, string part_Code, string part_Name, Nullable<int> category_Id, Nullable<int> color_Id, Nullable<int> material_Id, string modifiedBy, ObjectParameter return_Status)
        {
            var part_IdParameter = part_Id.HasValue ?
                new ObjectParameter("Part_Id", part_Id) :
                new ObjectParameter("Part_Id", typeof(int));
    
            var part_Type_IdParameter = part_Type_Id.HasValue ?
                new ObjectParameter("Part_Type_Id", part_Type_Id) :
                new ObjectParameter("Part_Type_Id", typeof(int));
    
            var outsource_Type_IdParameter = outsource_Type_Id.HasValue ?
                new ObjectParameter("Outsource_Type_Id", outsource_Type_Id) :
                new ObjectParameter("Outsource_Type_Id", typeof(int));
    
            var part_CodeParameter = part_Code != null ?
                new ObjectParameter("Part_Code", part_Code) :
                new ObjectParameter("Part_Code", typeof(string));
    
            var part_NameParameter = part_Name != null ?
                new ObjectParameter("Part_Name", part_Name) :
                new ObjectParameter("Part_Name", typeof(string));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var color_IdParameter = color_Id.HasValue ?
                new ObjectParameter("Color_Id", color_Id) :
                new ObjectParameter("Color_Id", typeof(int));
    
            var material_IdParameter = material_Id.HasValue ?
                new ObjectParameter("Material_Id", material_Id) :
                new ObjectParameter("Material_Id", typeof(int));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePart", part_IdParameter, part_Type_IdParameter, outsource_Type_IdParameter, part_CodeParameter, part_NameParameter, category_IdParameter, color_IdParameter, material_IdParameter, modifiedByParameter, return_Status);
        }
    
        public virtual ObjectResult<GetAllCategory_Result> GetAllCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCategory_Result>("GetAllCategory");
        }
    
        public virtual ObjectResult<GetAllColor_Result> GetAllColor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllColor_Result>("GetAllColor");
        }
    
        public virtual ObjectResult<GetAllMaterial_Result> GetAllMaterial()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllMaterial_Result>("GetAllMaterial");
        }
    
        public virtual ObjectResult<GetAllOutsourceType_Result> GetAllOutsourceType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllOutsourceType_Result>("GetAllOutsourceType");
        }
    }
}
